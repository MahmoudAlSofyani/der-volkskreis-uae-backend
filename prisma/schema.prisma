generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum RoleNames {
  ADMIN
  MEMBER
  ACTIVE
  INACTIVE
  PURGED
  WOLFSBURG
}

model Role {
  name    String   @id
  members Member[]
}

model Member {
  id             String   @id @default(uuid())
  firstName      String
  lastName       String
  emailAddress   String
  mobileNumber   String
  whatsAppNumber String   @default("null")
  instagramName  String   @default("null")
  password       String
  browniePoints  Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  /// @onDelete(CASCADE)
  cars           Car[]
  roles          Role[]
  /// @onDelete(CASCADE)
  events         Event[]
}

model CarModel {
  id   Int    @id @default(autoincrement())
  name String
}

model CarColor {
  id   Int    @id @default(autoincrement())
  name String
}

model PlateEmirate {
  id         Int         @id @default(autoincrement())
  name       String
  plateCodes PlateCode[]
}

model PlateCode {
  id             Int          @id @default(autoincrement())
  name           String
  plateEmirate   PlateEmirate @relation(fields: [plateEmirateId], references: [id])
  plateEmirateId Int

}

model Car {
  id           String @id @default(uuid())
  carModel     String
  carColor     String
  carYear      String
  plateEmirate String
  plateCode    String
  plateNumber  String
  vinNumber    String @default("null") // this is mandatory!
  member       Member @relation(fields: [memberId], references: [id])
  memberId     String
}

model Event {
  id           String   @id @default(uuid())
  name         String
  date         DateTime
  meetingPoint String
  meetingTime  String
  details      String
  members      Member[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Announcement {
  id        String   @id @default(uuid())
  title     String
  details   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
